@model VConnect.Models.ProfileDetails
@{
    ViewData["Title"] = "Your Profile - VConnect";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        /* Global Styles */
        :root {
            --primary-color: #0b3d2e;
            --secondary-color: #1a5e48;
            --accent-color: #ffc107;
            --light-bg: #f8f9fa;
            --dark-text: #232a36;
        }

        /* Hero Section */
        .hero-section {
            padding: 7rem 0 5rem;
            background: linear-gradient(135deg, var(--dark-text) 0%, var(--secondary-color) 100%);
            margin-top: -25px;
            position: relative;
            overflow: hidden;
            color: white;
            text-align: center;
        }

            .hero-section::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                opacity: 0.5;
            }

        .hero-title {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 1rem;
            animation: fadeInDown 1s ease;
        }

        .hero-subtitle {
            font-size: 1.2rem;
            max-width: 700px;
            margin: 0 auto;
            animation: fadeInUp 1s ease;
            opacity: 0.9;
        }

        /* Profile Card */
        .profile-card {
            background: #fff;
            border-radius: 16px;
            box-shadow: 0 12px 28px rgba(0,0,0,.15);
            overflow: hidden;
            max-width: 760px;
            margin: -60px auto 32px;
            position: relative;
            z-index: 50;
        }

        .profile-header {
            text-align: center;
            padding: 64px 24px 16px;
            border-bottom: 1px solid #f0f2f5;
            position: relative;
        }

        .avatar {
            width: 112px;
            height: 112px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #fff;
            box-shadow: 0 8px 24px rgba(0,0,0,.2);
            position: absolute;
            left: 50%;
            transform: translate(-50%, -50%);
            top: 0;
            background: #fff;
        }

        .display-name {
            font-weight: 800;
            color: var(--primary-color);
            margin-top: 1.5rem;
        }

        .subline {
            color: #6b7280;
        }

        .actions .btn {
            border-radius: 50px;
            padding: 0.5rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }

            .actions .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

        /* Section Title */
        .section-title {
            font-size: .85rem;
            text-transform: uppercase;
            letter-spacing: .04em;
            color: var(--primary-color);
            font-weight: 700;
            margin: 16px 0 8px 16px;
        }

        /* Info Rows */
        .info-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 16px;
            border-top: 1px solid #f0f2f5;
        }

        .info-label {
            color: #6b7280;
            font-weight: 600;
        }

        .info-value {
            color: #111827;
            font-weight: 600;
        }

        /* Stat Cards */
        .stat-card {
            background: #fff;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,.05);
            transition: all 0.3s ease;
        }

            .stat-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 15px rgba(0,0,0,.1);
            }

        .stat-label {
            color: #6b7280;
            font-weight: 600;
            font-size: .9rem;
        }

        .stat-value {
            font-weight: 800;
            font-size: 1.5rem;
            color: var(--primary-color);
        }

        /* Animations */
        @@keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .hero-section {
                padding: 6rem 0 4rem;
            }

            .hero-title {
                font-size: 2rem;
            }

            .hero-subtitle {
                font-size: 1rem;
            }

            .profile-card {
                margin: -40px 12px 24px;
            }

            .profile-header {
                padding: 58px 16px 12px;
            }

            .stat-value {
                font-size: 1.25rem;
            }
        }

        @@media (max-width: 576px) {
            .hero-title {
                font-size: 1.8rem;
            }

            .avatar {
                width: 96px;
                height: 96px;
            }

            .display-name {
                font-size: 1.5rem;
            }
        }
    </style>
}

<!-- Hero Section -->
<section class="hero-section">
    <div class="container">
        <h1 class="hero-title">Your Profile</h1>
        <p class="hero-subtitle">Manage your info and see your activity</p>
    </div>
</section>

<!-- Profile Card -->
<div class="profile-card">
    <div class="profile-header">
        <img class="avatar"
             src="@(string.IsNullOrWhiteSpace(Model?.ProfilePictureUrl) ? Url.Content("~/images/avatar.png") : Model.ProfilePictureUrl)"
             alt="Profile picture" />

        <h3 class="display-name mt-4 mb-1">@Model?.FirstName @Model?.LastName</h3>
        <div class="subline">@Model?.Email</div>

        <div class="actions d-flex justify-content-center gap-2 mt-3">
            <a asp-action="Edit" class="btn btn-primary px-4">Edit</a>
            <a asp-action="Delete" class="btn btn-outline-danger px-4">Delete</a>
        </div>
    </div>

    <div class="p-3 p-md-4">
        <!-- Stats -->
        <div class="row g-3 mb-4">
            <div class="col-md-6">
                <div class="stat-card p-3 text-center">
                    <div class="stat-label">Volunteer Hours</div>
                    <div class="stat-value">@Model?.TotalVolunteerHours</div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="stat-card p-3 text-center">
                    <div class="stat-label">Events Participated</div>
                    <div class="stat-value">@Model?.EventsParticipated</div>
                </div>
            </div>
        </div>

        <!-- Private Information -->
        <div class="section-title">Private Information</div>

        <div class="info-row">
            <div class="info-label">Email</div>
            <div class="info-value">@Model?.Email</div>
        </div>
        <div class="info-row">
            <div class="info-label">Birthdate</div>
            <div class="info-value">@Model?.DateOfBirth?.ToString("dd-MMMM-yyyy")</div>
        </div>
        <div class="info-row">
            <div class="info-label">Phone</div>
            <div class="info-value">@Model?.PhoneNumber</div>
        </div>
        <div class="info-row">
            <div class="info-label">City</div>
            <div class="info-value">@Model?.City</div>
        </div>
        <div class="info-row">
            <div class="info-label">Address</div>
            <div class="info-value">@Model?.Address</div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add subtle animations to elements
            const statCards = document.querySelectorAll('.stat-card');
            
            statCards.forEach((card, index) => {
                // Add delay based on index
                card.style.animationDelay = `${index * 0.1}s`;
                card.style.animation = 'fadeInUp 0.5s ease forwards';
            });
        });
    </script>
}