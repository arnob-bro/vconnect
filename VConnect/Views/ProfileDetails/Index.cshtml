@model VConnect.Models.ProfileDetails
@{
    ViewData["Title"] = "Your Profile - VConnect";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Hero Section -->
<section class="hero-section">
    <div class="container text-center text-white">
        <h1 class="hero-title">Your Profile</h1>
        <p class="hero-subtitle">Manage your information and track your volunteer journey</p>
    </div>
</section>

<!-- Stats Section -->
<section class="stats-section bg-light">
    <div class="container">
        <div class="row text-center">
            <div class="col-md-6 col-12 mb-4">
                <div class="stat-card">
                    <h2 class="stat-number" id="stat1" data-count="@(Model?.TotalVolunteerHours ?? 0)">0</h2>
                    <p class="stat-label">Volunteer Hours</p>
                </div>
            </div>
            <div class="col-md-6 col-12 mb-4">
                <div class="stat-card">
                    <h2 class="stat-number" id="stat2" data-count="@(Model?.EventsParticipated ?? 0)">0</h2>
                    <p class="stat-label">Events Participated</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Profile Details Section -->
<section class="profile-section">
    <div class="container">
        <div class="text-center section-heading">
            <span class="badge featured-badge">Profile Details</span>
            <h2 class="section-title">Your Information</h2>
            <p class="section-subtitle">Manage your personal details and volunteer preferences</p>
        </div>

        <div class="row justify-content-center">
            <div class="col-lg-8 col-xl-7">
                <div class="case-card profile-card card border-0 shadow-sm">
                    <div class="profile-header text-center py-5">
                        <img class="avatar mb-4"
                             src="@(string.IsNullOrWhiteSpace(Model?.ProfilePictureUrl) ? Url.Content("~/images/avatar.png") : Model.ProfilePictureUrl)"
                             alt="Profile picture" />

                        <h3 class="display-name mb-2">@Model?.FirstName @Model?.LastName</h3>
                        <p class="profile-email text-muted mb-4">@Model?.Email</p>

                        <div class="profile-actions d-flex justify-content-center gap-3">
                            <a asp-action="Edit" class="btn case-button px-4">
                                <i class="fas fa-edit me-2"></i>Edit Profile
                            </a>
                            <a asp-action="Delete" class="btn btn-outline-danger px-4">
                                <i class="fas fa-trash me-2"></i>Delete Account
                            </a>
                        </div>
                    </div>

                    <div class="card-body p-0">
                        <div class="section-divider">
                            <h5 class="section-subtitle-small">Personal Information</h5>
                        </div>

                        <div class="info-grid">
                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-envelope me-2 text-primary"></i>Email Address
                                </div>
                                <div class="info-value">@Model?.Email</div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-calendar me-2 text-primary"></i>Date of Birth
                                </div>
                                <div class="info-value">@(Model?.DateOfBirth?.ToString("dd MMMM yyyy") ?? "Not provided")</div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-phone me-2 text-primary"></i>Phone Number
                                </div>
                                <div class="info-value">@(Model?.PhoneNumber ?? "Not provided")</div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-map-marker-alt me-2 text-primary"></i>City
                                </div>
                                <div class="info-value">@(Model?.City ?? "Not provided")</div>
                            </div>

                            <div class="info-row">
                                <div class="info-label">
                                    <i class="fas fa-home me-2 text-primary"></i>Address
                                </div>
                                <div class="info-value">@(Model?.Address ?? "Not provided")</div>
                            </div>
                        </div>
                    </div>

                    <div class="card-footer bg-transparent border-0 text-center py-3">
                        <small class="text-muted">
                            <i class="fas fa-shield-alt me-1 text-success"></i>
                            Your personal information is secure and protected
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Styles {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        /* Global Styles */
        :root {
            --primary-color: #0b3d2e;
            --secondary-color: #1a5e48;
            --accent-color: #ffc107;
            --light-bg: #f8f9fa;
            --dark-text: #232a36;
        }

        /* Hero Section */
        .hero-section {
            padding: 7rem 0 5rem;
            background: linear-gradient(135deg, var(--dark-text) 0%, var(--secondary-color) 100%);
            margin-top: -25px;
            position: relative;
            overflow: hidden;
        }

            .hero-section::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                opacity: 0.5;
            }

        .hero-title {
            font-size: 3.5rem;
            font-weight: 800;
            margin-bottom: 1rem;
            animation: fadeInDown 1s ease;
        }

        .hero-subtitle {
            font-size: 1.35rem;
            max-width: 700px;
            margin: 0 auto;
            animation: fadeInUp 1s ease;
        }

        /* Stats Section */
        .stats-section {
            padding: 5rem 0;
        }

        .stat-card {
            padding: 2rem 1rem;
            transition: transform 0.3s ease;
        }

            .stat-card:hover {
                transform: translateY(-5px);
            }

        .stat-number {
            font-size: 3.5rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #6c757d;
            font-size: 1.1rem;
        }

        /* Profile Section */
        .profile-section {
            padding: 5rem 0;
        }

        /* Section Headings */
        .section-heading {
            margin-bottom: 4rem;
        }

        .featured-badge {
            background-color: var(--accent-color);
            color: #000;
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
            margin-bottom: 1.5rem;
        }

        .section-title {
            color: var(--primary-color);
            font-weight: 700;
            margin-bottom: 1rem;
        }

        .section-subtitle {
            font-size: 1.25rem;
            color: #6c757d;
            max-width: 700px;
            margin: 0 auto;
        }

        /* Profile Card */
        .profile-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-radius: 15px;
            overflow: hidden;
        }

            .profile-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 15px 35px rgba(0,0,0,0.1) !important;
            }

        .profile-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-bottom: 1px solid #e9ecef;
        }

        .avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid #fff;
            box-shadow: 0 8px 24px rgba(0,0,0,0.15);
        }

        .display-name {
            font-weight: 700;
            color: var(--primary-color);
            font-size: 1.8rem;
        }

        .profile-email {
            font-size: 1.1rem;
        }

        /* Profile Actions */
        .profile-actions .btn {
            border-radius: 50px;
            padding: 0.6rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        /* Case Button (matching Heroes page) */
        .case-button {
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
            border-radius: 50px;
            padding: 0.6rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
            background: transparent;
        }

            .case-button:hover {
                background-color: var(--primary-color);
                color: white;
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(11, 61, 46, 0.25);
            }

        /* Section Divider */
        .section-divider {
            padding: 1.5rem 2rem;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
        }

        .section-subtitle-small {
            color: var(--primary-color);
            font-weight: 700;
            margin: 0;
            font-size: 1.1rem;
        }

        /* Info Grid */
        .info-grid {
            padding: 0;
        }

        .info-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.25rem 2rem;
            border-bottom: 1px solid #f1f3f4;
            transition: background-color 0.2s ease;
        }

            .info-row:hover {
                background-color: #f8f9fa;
            }

            .info-row:last-child {
                border-bottom: none;
            }

        .info-label {
            color: #6c757d;
            font-weight: 600;
            display: flex;
            align-items: center;
        }

        .info-value {
            color: var(--dark-text);
            font-weight: 600;
            text-align: right;
        }

        /* Animations */
        @@keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive Design */
        @@media (max-width: 1200px) {
            .hero-title {
                font-size: 3rem;
            }
            .stat-number {
                font-size: 3rem;
            }
        }

        @@media (max-width: 992px) {
            .hero-section {
                padding: 6rem 0 4rem;
            }
            .hero-title {
                font-size: 2.5rem;
            }
            .hero-subtitle {
                font-size: 1.2rem;
            }
            .stats-section, .profile-section {
                padding: 4rem 0;
            }
            .section-heading {
                margin-bottom: 3rem;
            }
            .stat-number {
                font-size: 2.5rem;
            }
        }

        @@media (max-width: 768px) {
            .hero-title {
                font-size: 2.2rem;
            }
            .hero-subtitle {
                font-size: 1.1rem;
            }
            .stats-section, .profile-section {
                padding: 3rem 0;
            }
            .stat-card {
                padding: 1.5rem 0.5rem;
            }
            .stat-number {
                font-size: 2rem;
            }
            .stat-label {
                font-size: 1rem;
            }
            .info-row {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
                padding: 1rem 1.5rem;
            }
            .info-value {
                text-align: left;
                width: 100%;
            }
            .section-divider {
                padding: 1rem 1.5rem;
            }
            .profile-actions {
                flex-direction: column;
                gap: 0.75rem !important;
            }
            .profile-actions .btn {
                width: 200px;
            }
        }

        @@media (max-width: 576px) {
            .hero-title {
                font-size: 2rem;
            }
            .stat-number {
                font-size: 1.8rem;
            }
            .avatar {
                width: 100px;
                height: 100px;
            }
            .display-name {
                font-size: 1.5rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Counter animation for stats
            function animateCounter(element, target) {
                let current = 0;
                let increment = Math.max(target / 50, 1);
                let duration = 2000; // 2 seconds
                let stepTime = Math.abs(Math.floor(duration / (target / increment)));

                let timer = setInterval(function() {
                    current += increment;
                    if (current >= target) {
                        clearInterval(timer);
                        current = target;
                    }
                    element.textContent = Math.floor(current).toLocaleString();
                }, stepTime);
            }

            // Start counter animation when stats are in viewport
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const stat1Target = parseInt(document.getElementById('stat1').getAttribute('data-count'));
                        const stat2Target = parseInt(document.getElementById('stat2').getAttribute('data-count'));
                        
                        animateCounter(document.getElementById('stat1'), stat1Target);
                        animateCounter(document.getElementById('stat2'), stat2Target);
                        observer.disconnect();
                    }
                });
            }, { threshold: 0.5 });

            const statsSection = document.querySelector('.stats-section');
            if (statsSection) {
                observer.observe(statsSection);
            }

            // Add animation to profile card when it comes into view
            const profileCard = document.querySelector('.profile-card');

            const cardObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.animation = 'fadeInUp 0.5s ease forwards';
                        cardObserver.unobserve(entry.target);
                    }
                });
            }, {
                threshold: 0.1
            });

            if (profileCard) {
                cardObserver.observe(profileCard);
            }
        });
    </script>
}